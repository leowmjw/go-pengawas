// Code generated by ogen, DO NOT EDIT.

package vault

import (
	"context"
	"net/http"

	"github.com/go-faster/errors"
)

// SecurityHandler is handler for security parameters.
type SecurityHandler interface {
	// HandleBasicAuth handles basicAuth security.
	// The default authentication schema.
	HandleBasicAuth(ctx context.Context, operationID string, t BasicAuth) (context.Context, error)
}

func (s *Server) securityBasicAuth(ctx context.Context, operationID string, req *http.Request) (context.Context, error) {
	var t BasicAuth
	username, password, ok := req.BasicAuth()
	if !ok {
		return nil, errors.New("invalid basic auth")
	}
	t.Username = username
	t.Password = password
	return s.sec.HandleBasicAuth(ctx, operationID, t)
}

// SecuritySource is provider of security values (tokens, passwords, etc.).
type SecuritySource interface {
	// BasicAuth provides basicAuth security value.
	// The default authentication schema.
	BasicAuth(ctx context.Context, operationID string) (BasicAuth, error)
}

func (s *Client) securityBasicAuth(ctx context.Context, operationID string, req *http.Request) error {
	t, err := s.sec.BasicAuth(ctx, operationID)
	if err != nil {
		return errors.Wrap(err, "security source \"BasicAuth\"")
	}
	req.SetBasicAuth(t.Username, t.Password)
	return nil
}
