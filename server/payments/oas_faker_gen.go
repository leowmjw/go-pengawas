// Code generated by ogen, DO NOT EDIT.

package payments

import (
	"fmt"
	"time"

	"github.com/go-faster/jx"
)

// SetFake set fake values.
func (s *AVSResult) SetFake() {
	{
		{
			s.Code.SetFake()
		}
	}
	{
		{
			s.Message.SetFake()
		}
	}
	{
		{
			s.PostalMatch.SetFake()
		}
	}
	{
		{
			s.StreetMatch.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Amount) SetFake() {
	var unwrapped int
	{
		unwrapped = int(0)
	}
	*s = Amount(unwrapped)
}

// SetFake set fake values.
func (s *ApiError) SetFake() {
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem GeneralError
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BrowserInfo) SetFake() {
	{
		{
			s.ColorDepth = "string"
		}
	}
	{
		{
			s.JavaEnabled = true
		}
	}
	{
		{
			s.Language = "string"
		}
	}
	{
		{
			s.ScreenHeight = "string"
		}
	}
	{
		{
			s.ScreenWidth = "string"
		}
	}
	{
		{
			s.Timezone = "string"
		}
	}
	{
		{
			s.UserAgent = "string"
		}
	}
}

// SetFake set fake values.
func (s *FinalizeTransferApplicationJSONCreated) SetFake() {
	var unwrapped TransferData
	{
		unwrapped.SetFake()
	}
	*s = FinalizeTransferApplicationJSONCreated(unwrapped)
}

// SetFake set fake values.
func (s *FinalizeTransferApplicationJSONOK) SetFake() {
	var unwrapped TransferData
	{
		unwrapped.SetFake()
	}
	*s = FinalizeTransferApplicationJSONOK(unwrapped)
}

// SetFake set fake values.
func (s *FinancialInstrument) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FinancialInstrumentApiErrors) SetFake() {
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem FinancialInstrumentError
				{
					elem.SetFake()
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FinancialInstrumentError) SetFake() {
	var unwrapped jx.Raw
	{
		unwrapped = []byte("null")
	}
	*s = FinancialInstrumentError(unwrapped)
}

// SetFake set fake values.
func (s *FinancialInstrumentListData) SetFake() {
	{
		{
			s.Data = nil
			for i := 0; i < 0; i++ {
				var elem FinancialInstrument
				{
					elem.SetFake()
				}
				s.Data = append(s.Data, elem)
			}
		}
	}
	{
		{
			s.Links.SetFake()
		}
	}
	{
		{
			s.Meta.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FinancialInstrumentListDataLinks) SetFake() {
	{
		{
			s.First = "string"
		}
	}
	{
		{
			s.Last = "string"
		}
	}
	{
		{
			s.Next.SetFake()
		}
	}
	{
		{
			s.Prev.SetFake()
		}
	}
	{
		{
			s.Self = "string"
		}
	}
}

// SetFake set fake values.
func (s *FinancialInstrumentListDataMeta) SetFake() {
	{
		{
			s.TotalElements.SetFake()
		}
	}
	{
		{
			s.TotalPages.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Gateway) SetFake() {
	{
		{
			s.Config.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.DefaultCurrency = "string"
		}
	}
	{
		{
			s.DefaultGateway.SetFake()
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *GatewayConfig) SetFake() {
}

// SetFake set fake values.
func (s *GatewayCreate) SetFake() {
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Config = nil
		}
	}
	{
		{
			s.DefaultCurrency.SetFake()
		}
	}
	{
		{
			s.DefaultGateway.SetFake()
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GatewayCreateConfig) SetFake() {
}

// SetFake set fake values.
func (s *GatewayData) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GatewayListData) SetFake() {
	{
		{
			s.Data = nil
			for i := 0; i < 0; i++ {
				var elem Gateway
				{
					elem.SetFake()
				}
				s.Data = append(s.Data, elem)
			}
		}
	}
	{
		{
			s.Links.SetFake()
		}
	}
	{
		{
			s.Meta.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GatewayListDataLinks) SetFake() {
	{
		{
			s.First = "string"
		}
	}
	{
		{
			s.Last = "string"
		}
	}
	{
		{
			s.Next.SetFake()
		}
	}
	{
		{
			s.Prev.SetFake()
		}
	}
	{
		{
			s.Self = "string"
		}
	}
}

// SetFake set fake values.
func (s *GatewayListDataMeta) SetFake() {
	{
		{
			s.TotalElements.SetFake()
		}
	}
	{
		{
			s.TotalPages.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GatewayOptions) SetFake() {
	{
		{
			s.Currency.SetFake()
		}
	}
	{
		{
			s.ShippingAddress = []byte("null")
		}
	}
	{
		{
			s.AdditionalProps.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GatewayOptionsAdditional) SetFake() {
	var (
		elem GatewayOptionsAdditionalItem
		m    map[string]GatewayOptionsAdditionalItem = s.init()
	)
	for i := 0; i < 0; i++ {
		m[fmt.Sprintf("fake%d", i)] = elem
	}
}

// SetFake set fake values.
func (s *GatewayOptionsAdditionalItem) SetFake() {
}

// SetFake set fake values.
func (s *GatewayPSPType) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = GatewayPSPType(unwrapped)
}

// SetFake set fake values.
func (s *GatewayUpdate) SetFake() {
	{
		{ // Keep pointer nil to prevent infinite recursion.
			s.Config = nil
		}
	}
	{
		{
			s.DefaultCurrency.SetFake()
		}
	}
	{
		{
			s.DefaultGateway.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GatewayUpdateConfig) SetFake() {
}

// SetFake set fake values.
func (s *GatewaysApiErrors) SetFake() {
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem []jx.Raw
				{
					elem = nil
					for i := 0; i < 1; i++ {
						var elemElem jx.Raw
						{
							elemElem = []byte("null")
						}
						elem = append(elem, elemElem)
					}
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GeneralError) SetFake() {
}

// SetFake set fake values.
func (s *NilStoredFinancialInstrument) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilString) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *OptAmount) SetFake() {
	var elem Amount
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
	var elem bool
	{
		elem = true
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptFloat64) SetFake() {
	var elem float64
	{
		elem = float64(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGatewayCreate) SetFake() {
	var elem GatewayCreate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGatewayOptions) SetFake() {
	var elem GatewayOptions
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGatewayPSPType) SetFake() {
	var elem GatewayPSPType
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptGatewayUpdate) SetFake() {
	var elem GatewayUpdate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptInt) SetFake() {
	var elem int
	{
		elem = int(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptNilAVSResult) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilString) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilThreeDSAuthenticationChallenge) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilThreeDSAuthenticationDeviceFingerprint) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptOrderCreate) SetFake() {
	var elem OrderCreate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptPaymentCardCreate) SetFake() {
	var elem PaymentCardCreate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptReversal) SetFake() {
	var elem Reversal
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptRuleCreate) SetFake() {
	var elem RuleCreate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptRuleUpdate) SetFake() {
	var elem RuleUpdate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptRuleUpdateAction) SetFake() {
	var elem RuleUpdateAction
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptThreeDSAuthenticationCreate) SetFake() {
	var elem ThreeDSAuthenticationCreate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptThreeDSProviderCreate) SetFake() {
	var elem ThreeDSProviderCreate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTransferUpdate) SetFake() {
	var elem TransferUpdate
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *Order) SetFake() {
}

// SetFake set fake values.
func (s *OrderApiErrors) SetFake() {
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem []jx.Raw
				{
					elem = nil
					for i := 0; i < 1; i++ {
						var elemElem jx.Raw
						{
							elemElem = []byte("null")
						}
						elem = append(elem, elemElem)
					}
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OrderCreate) SetFake() {
	{
		{
			s.Amount = float64(0)
		}
	}
	{
		{
			s.CancelURL.SetFake()
		}
	}
	{
		{
			s.Currency = "string"
		}
	}
	{
		{
			s.ErrorURL.SetFake()
		}
	}
	{
		{
			s.FinancialInstrumentTypes = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.FinancialInstrumentTypes = append(s.FinancialInstrumentTypes, elem)
			}
		}
	}
	{
		{
			s.Items = nil
			for i := 0; i < 0; i++ {
				var elem OrderCreateItemsItem
				{
					elem.SetFake()
				}
				s.Items = append(s.Items, elem)
			}
		}
	}
	{
		{
			s.PercentOff.SetFake()
		}
	}
	{
		{
			s.SuccessURL.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OrderCreateItemsItem) SetFake() {
	{
		{
			s.Image.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.PercentOff.SetFake()
		}
	}
	{
		{
			s.Price = float64(0)
		}
	}
	{
		{
			s.Quantity = int(0)
		}
	}
}

// SetFake set fake values.
func (s *OrderData) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PaymentCardCreate) SetFake() {
	{
		{
			s.Card.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PaymentCardDetails) SetFake() {
	var unwrapped jx.Raw
	{
		unwrapped = []byte("null")
	}
	*s = PaymentCardDetails(unwrapped)
}

// SetFake set fake values.
func (s *PaymentCardDetailsCreate) SetFake() {
	{
		{
			s.BillingAddress = []byte("null")
		}
	}
	{
		{
			s.Cvc = "string"
		}
	}
	{
		{
			s.ExpMonth = int(0)
		}
	}
	{
		{
			s.ExpYear = int(0)
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Number = "string"
		}
	}
}

// SetFake set fake values.
func (s *PaymentCardObject) SetFake() {
	{
		{
			s.Card.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.ID.SetFake()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *Reversal) SetFake() {
	{
		{
			s.Amount.SetFake()
		}
	}
	{
		{
			s.GatewayOptions.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Rule) SetFake() {
	{
		{
			s.Action.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.Criteria = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Ordinal = int(0)
		}
	}
	{
		{
			s.RouteToGateway.SetFake()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *RuleAction) SetFake() {
	*s = RuleActionBlock
}

// SetFake set fake values.
func (s *RuleCreate) SetFake() {
	{
		{
			s.Action.SetFake()
		}
	}
	{
		{
			s.Criteria = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Ordinal = int(0)
		}
	}
	{
		{
			s.RouteToGateway.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RuleCreateAction) SetFake() {
	*s = RuleCreateActionBlock
}

// SetFake set fake values.
func (s *RuleData) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RuleListData) SetFake() {
	{
		{
			s.Data = nil
			for i := 0; i < 0; i++ {
				var elem Rule
				{
					elem.SetFake()
				}
				s.Data = append(s.Data, elem)
			}
		}
	}
	{
		{
			s.Links.SetFake()
		}
	}
	{
		{
			s.Meta.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RuleListDataLinks) SetFake() {
	{
		{
			s.First = "string"
		}
	}
	{
		{
			s.Last = "string"
		}
	}
	{
		{
			s.Next.SetFake()
		}
	}
	{
		{
			s.Prev.SetFake()
		}
	}
	{
		{
			s.Self = "string"
		}
	}
}

// SetFake set fake values.
func (s *RuleListDataMeta) SetFake() {
	{
		{
			s.TotalElements.SetFake()
		}
	}
	{
		{
			s.TotalPages.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RuleUpdate) SetFake() {
	{
		{
			s.Action.SetFake()
		}
	}
	{
		{
			s.Criteria.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Ordinal.SetFake()
		}
	}
	{
		{
			s.RouteToGateway.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RuleUpdateAction) SetFake() {
	*s = RuleUpdateActionBlock
}

// SetFake set fake values.
func (s *RulesApiErrors) SetFake() {
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem []jx.Raw
				{
					elem = nil
					for i := 0; i < 1; i++ {
						var elemElem jx.Raw
						{
							elemElem = []byte("null")
						}
						elem = append(elem, elemElem)
					}
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *StoredFinancialInstrument) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = StoredFinancialInstrument(unwrapped)
}

// SetFake set fake values.
func (s *ThreeDSAuthentication) SetFake() {
	{
		{
			s.Amount.SetFake()
		}
	}
	{
		{
			s.Card = "string"
		}
	}
	{
		{
			s.Challenge.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.Currency = "string"
		}
	}
	{
		{
			s.DeviceFingerprint.SetFake()
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.State.SetFake()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationChallenge) SetFake() {
	{
		{
			s.Params.SetFake()
		}
	}
	{
		{
			s.URL = "string"
		}
	}
	{
		{
			s.WaitForMessage = true
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationChallengeParams) SetFake() {
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationChallengeReq) SetFake() {
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationCreate) SetFake() {
	{
		{
			s.Amount.SetFake()
		}
	}
	{
		{
			s.BrowserInfo.SetFake()
		}
	}
	{
		{
			s.Card = "string"
		}
	}
	{
		{
			s.Currency = "string"
		}
	}
	{
		{
			s.Origin = "string"
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationData) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationDeviceFingerprint) SetFake() {
	{
		{
			s.Params.SetFake()
		}
	}
	{
		{
			s.URL = "string"
		}
	}
	{
		{
			s.WaitForMessage.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationDeviceFingerprintParams) SetFake() {
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationDeviceFingerprintReq) SetFake() {
}

// SetFake set fake values.
func (s *ThreeDSAuthenticationState) SetFake() {
	*s = ThreeDSAuthenticationStateDeviceFingerprint
}

// SetFake set fake values.
func (s *ThreeDSProvider) SetFake() {
	{
		{
			s.Config.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSProviderApiErrors) SetFake() {
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem []jx.Raw
				{
					elem = nil
					for i := 0; i < 1; i++ {
						var elemElem jx.Raw
						{
							elemElem = []byte("null")
						}
						elem = append(elem, elemElem)
					}
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSProviderConfig) SetFake() {
}

// SetFake set fake values.
func (s *ThreeDSProviderCreate) SetFake() {
	{
		{
			s.Config.SetFake()
		}
	}
	{
		{
			s.Type = []byte("null")
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSProviderCreateConfig) SetFake() {
}

// SetFake set fake values.
func (s *ThreeDSProviderData) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ThreeDSProviderType) SetFake() {
	*s = ThreeDSProviderTypeAdyen
}

// SetFake set fake values.
func (s *Transfer) SetFake() {
	{
		{
			s.Amount.SetFake()
		}
	}
	{
		{
			s.AmountCaptured.SetFake()
		}
	}
	{
		{
			s.AmountReversed.SetFake()
		}
	}
	{
		{
			s.AvsResult.SetFake()
		}
	}
	{
		{
			s.Captures = nil
			for i := 0; i < 0; i++ {
				var elem TransferCapture
				{
					elem.SetFake()
				}
				s.Captures = append(s.Captures, elem)
			}
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.Currency.SetFake()
		}
	}
	{
		{
			s.Destination.SetFake()
		}
	}
	{
		{
			s.Fee.SetFake()
		}
	}
	{
		{
			s.Gateway.SetFake()
		}
	}
	{
		{
			s.GatewayResponse.SetFake()
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.ReversedTransfer.SetFake()
		}
	}
	{
		{
			s.Source.SetFake()
		}
	}
	{
		{
			s.State.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *TransferCapture) SetFake() {
	{
		{
			s.Amount = []byte("null")
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.GatewayResponse.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TransferCreate) SetFake() {
	var unwrapped jx.Raw
	{
		unwrapped = []byte("null")
	}
	*s = TransferCreate(unwrapped)
}

// SetFake set fake values.
func (s *TransferData) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TransferGatewayResponse) SetFake() {
	{
		{
			s.ErrorCode.SetFake()
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Message = "string"
		}
	}
	{
		{
			s.RawResponse = "string"
		}
	}
	{
		{
			s.State.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TransferGatewayResponseState) SetFake() {
	*s = TransferGatewayResponseStateSuccessful
}

// SetFake set fake values.
func (s *TransferListData) SetFake() {
	{
		{
			s.Data = nil
			for i := 0; i < 0; i++ {
				var elem Transfer
				{
					elem.SetFake()
				}
				s.Data = append(s.Data, elem)
			}
		}
	}
	{
		{
			s.Links.SetFake()
		}
	}
	{
		{
			s.Meta.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TransferListDataLinks) SetFake() {
	{
		{
			s.First = "string"
		}
	}
	{
		{
			s.Last = "string"
		}
	}
	{
		{
			s.Next.SetFake()
		}
	}
	{
		{
			s.Prev.SetFake()
		}
	}
	{
		{
			s.Self = "string"
		}
	}
}

// SetFake set fake values.
func (s *TransferListDataMeta) SetFake() {
	{
		{
			s.TotalElements.SetFake()
		}
	}
	{
		{
			s.TotalPages.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TransferState) SetFake() {
	*s = TransferStatePending
}

// SetFake set fake values.
func (s *TransferType) SetFake() {
	*s = TransferTypeCredit
}

// SetFake set fake values.
func (s *TransferUpdate) SetFake() {
	{
		{
			s.Action.SetFake()
		}
	}
	{
		{
			s.Amount.SetFake()
		}
	}
	{
		{
			s.GatewayOptions.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TransferUpdateAction) SetFake() {
	*s = TransferUpdateActionCapture
}

// SetFake set fake values.
func (s *TransfersApiErrors) SetFake() {
	{
		{
			s.Errors = nil
			for i := 0; i < 0; i++ {
				var elem []jx.Raw
				{
					elem = nil
					for i := 0; i < 1; i++ {
						var elemElem jx.Raw
						{
							elemElem = []byte("null")
						}
						elem = append(elem, elemElem)
					}
				}
				s.Errors = append(s.Errors, elem)
			}
		}
	}
	{
		{
			s.TraceID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Verification) SetFake() {
	var unwrapped jx.Raw
	{
		unwrapped = []byte("null")
	}
	*s = Verification(unwrapped)
}

// SetFake set fake values.
func (s *VerificationData) SetFake() {
	{
		{
			s.Data.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *VerificationTransfer) SetFake() {
	{
		{
			s.Amount = int(0)
		}
	}
	{
		{
			s.AvsResult.SetFake()
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.Currency.SetFake()
		}
	}
	{
		{
			s.Destination.SetFake()
		}
	}
	{
		{
			s.Fee.SetFake()
		}
	}
	{
		{
			s.Gateway.SetFake()
		}
	}
	{
		{
			s.GatewayResponse.SetFake()
		}
	}
	{
		{
			s.ID = "string"
		}
	}
	{
		{
			s.Source.SetFake()
		}
	}
	{
		{
			s.State.SetFake()
		}
	}
	{
		{
			s.Type.SetFake()
		}
	}
	{
		{
			s.UpdatedAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *VerificationTransferState) SetFake() {
	*s = VerificationTransferStateSuccessful
}

// SetFake set fake values.
func (s *VerificationTransferType) SetFake() {
	*s = VerificationTransferTypeVerification
}
